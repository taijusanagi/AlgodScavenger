//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using UnityCollections = Unity.Collections;


namespace Algorand.Unity
{
    
    
    public partial struct AppCallTxn
    {
        
        private static bool @__generated__IsValid = AppCallTxn.@__generated__InitializeAlgoApiFormatters();
        
        private static bool @__generated__InitializeAlgoApiFormatters()
        {
            Algorand.Unity.AlgoApiFormatterLookup.Add<Algorand.Unity.AppCallTxn>(new Algorand.Unity.AlgoApiObjectFormatter<Algorand.Unity.AppCallTxn>(false).Assign("fee", (Algorand.Unity.AppCallTxn x) => x.Fee, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.MicroAlgos value) => x.Fee = value).Assign("fv", (Algorand.Unity.AppCallTxn x) => x.FirstValidRound, (ref Algorand.Unity.AppCallTxn x, System.UInt64 value) => x.FirstValidRound = value).Assign("gh", (Algorand.Unity.AppCallTxn x) => x.GenesisHash, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.GenesisHash value) => x.GenesisHash = value).Assign("lv", (Algorand.Unity.AppCallTxn x) => x.LastValidRound, (ref Algorand.Unity.AppCallTxn x, System.UInt64 value) => x.LastValidRound = value).Assign("snd", (Algorand.Unity.AppCallTxn x) => x.Sender, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.Address value) => x.Sender = value).Assign("type", (Algorand.Unity.AppCallTxn x) => x.TransactionType, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.TransactionType value) => x.TransactionType = value, Algorand.Unity.ByteEnumComparer<Algorand.Unity.TransactionType>.Instance).Assign("gen", (Algorand.Unity.AppCallTxn x) => x.GenesisId, (ref Algorand.Unity.AppCallTxn x, UnityCollections.FixedString32Bytes value) => x.GenesisId = value).Assign("grp", (Algorand.Unity.AppCallTxn x) => x.Group, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.TransactionId value) => x.Group = value).Assign("lx", (Algorand.Unity.AppCallTxn x) => x.Lease, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.TransactionId value) => x.Lease = value).Assign("note", (Algorand.Unity.AppCallTxn x) => x.Note, (ref Algorand.Unity.AppCallTxn x, System.Byte[] value) => x.Note = value, Algorand.Unity.ArrayComparer<System.Byte>.Instance).Assign("rekey", (Algorand.Unity.AppCallTxn x) => x.RekeyTo, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.Address value) => x.RekeyTo = value).Assign("apid", (Algorand.Unity.AppCallTxn x) => x.ApplicationId, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.AppIndex value) => x.ApplicationId = value).Assign("apan", (Algorand.Unity.AppCallTxn x) => x.OnComplete, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.OnCompletion value) => x.OnComplete = value, Algorand.Unity.ByteEnumComparer<Algorand.Unity.OnCompletion>.Instance).Assign("apap", (Algorand.Unity.AppCallTxn x) => x.ApprovalProgram, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.CompiledTeal value) => x.ApprovalProgram = value).Assign("apsu", (Algorand.Unity.AppCallTxn x) => x.ClearStateProgram, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.CompiledTeal value) => x.ClearStateProgram = value).Assign("apaa", (Algorand.Unity.AppCallTxn x) => x.AppArguments, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.CompiledTeal[] value) => x.AppArguments = value, Algorand.Unity.ArrayComparer<Algorand.Unity.CompiledTeal>.Instance).Assign("apat", (Algorand.Unity.AppCallTxn x) => x.Accounts, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.Address[] value) => x.Accounts = value, Algorand.Unity.ArrayComparer<Algorand.Unity.Address>.Instance).Assign("apfa", (Algorand.Unity.AppCallTxn x) => x.ForeignApps, (ref Algorand.Unity.AppCallTxn x, System.UInt64[] value) => x.ForeignApps = value, Algorand.Unity.ArrayComparer<System.UInt64>.Instance).Assign("apas", (Algorand.Unity.AppCallTxn x) => x.ForeignAssets, (ref Algorand.Unity.AppCallTxn x, System.UInt64[] value) => x.ForeignAssets = value, Algorand.Unity.ArrayComparer<System.UInt64>.Instance).Assign("apgs", (Algorand.Unity.AppCallTxn x) => x.GlobalStateSchema, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.StateSchema value) => x.GlobalStateSchema = value).Assign("apls", (Algorand.Unity.AppCallTxn x) => x.LocalStateSchema, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.StateSchema value) => x.LocalStateSchema = value).Assign("apep", (Algorand.Unity.AppCallTxn x) => x.ExtraProgramPages, (ref Algorand.Unity.AppCallTxn x, System.UInt64 value) => x.ExtraProgramPages = value).Assign("apbx", (Algorand.Unity.AppCallTxn x) => x.Boxes, (ref Algorand.Unity.AppCallTxn x, Algorand.Unity.BoxRef[] value) => x.Boxes = value, Algorand.Unity.ArrayComparer<Algorand.Unity.BoxRef>.Instance));
            return true;
        }
        
        public partial struct Params
        {
            
            private static bool @__generated__IsValid = Params.@__generated__InitializeAlgoApiFormatters();
            
            private static bool @__generated__InitializeAlgoApiFormatters()
            {
                Algorand.Unity.AlgoApiFormatterLookup.Add<Algorand.Unity.AppCallTxn.Params>(new Algorand.Unity.AlgoApiObjectFormatter<Algorand.Unity.AppCallTxn.Params>(false).Assign("apid", (Algorand.Unity.AppCallTxn.Params x) => x.ApplicationId, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.AppIndex value) => x.ApplicationId = value).Assign("apan", (Algorand.Unity.AppCallTxn.Params x) => x.OnComplete, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.OnCompletion value) => x.OnComplete = value, Algorand.Unity.ByteEnumComparer<Algorand.Unity.OnCompletion>.Instance).Assign("apap", (Algorand.Unity.AppCallTxn.Params x) => x.ApprovalProgram, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.CompiledTeal value) => x.ApprovalProgram = value).Assign("apsu", (Algorand.Unity.AppCallTxn.Params x) => x.ClearStateProgram, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.CompiledTeal value) => x.ClearStateProgram = value).Assign("apaa", (Algorand.Unity.AppCallTxn.Params x) => x.AppArguments, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.CompiledTeal[] value) => x.AppArguments = value, Algorand.Unity.ArrayComparer<Algorand.Unity.CompiledTeal>.Instance).Assign("apat", (Algorand.Unity.AppCallTxn.Params x) => x.Accounts, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.Address[] value) => x.Accounts = value, Algorand.Unity.ArrayComparer<Algorand.Unity.Address>.Instance).Assign("apfa", (Algorand.Unity.AppCallTxn.Params x) => x.ForeignApps, (ref Algorand.Unity.AppCallTxn.Params x, System.UInt64[] value) => x.ForeignApps = value, Algorand.Unity.ArrayComparer<System.UInt64>.Instance).Assign("apas", (Algorand.Unity.AppCallTxn.Params x) => x.ForeignAssets, (ref Algorand.Unity.AppCallTxn.Params x, System.UInt64[] value) => x.ForeignAssets = value, Algorand.Unity.ArrayComparer<System.UInt64>.Instance).Assign("global-state-schema", (Algorand.Unity.AppCallTxn.Params x) => x.GlobalStateSchema, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.StateSchema value) => x.GlobalStateSchema = value).Assign("local-state-schema", (Algorand.Unity.AppCallTxn.Params x) => x.LocalStateSchema, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.StateSchema value) => x.LocalStateSchema = value).Assign("epp", (Algorand.Unity.AppCallTxn.Params x) => x.ExtraProgramPages, (ref Algorand.Unity.AppCallTxn.Params x, System.UInt64 value) => x.ExtraProgramPages = value).Assign("apbx", (Algorand.Unity.AppCallTxn.Params x) => x.Boxes, (ref Algorand.Unity.AppCallTxn.Params x, Algorand.Unity.BoxRef[] value) => x.Boxes = value, Algorand.Unity.ArrayComparer<Algorand.Unity.BoxRef>.Instance));
                return true;
            }
        }
    }
}
